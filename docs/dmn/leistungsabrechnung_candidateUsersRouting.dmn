<?xml version="1.0" encoding="UTF-8"?>
<Definitions xmlns="http://www.omg.org/spec/DMN/20130901" id="definitions" name="camunda" 
  namespace="http://camunda.org/dmn" xmlns:camunda="http://camunda.org/schema/1.0/dmn">
    
    <Decision id="candidateUsersRouting" name="mögliche Benutzer">

        <DecisionTable id="candidateUsersTable" name="mögliche Benutzer" isComplete="false" isConsistent="true" hitPolicy="RULE ORDER" >

            <clause id="inputRequiredSkills" name="Required Skills">
                <inputExpression id="requiredSkillsExpression" name="Required Skills" expressionLanguage="groovy" >
                    <text>requiredSkills</text>
                </inputExpression>
                <inputEntry id="inputEntry41" expressionLanguage="groovy">
                    <text>requiredSkills.contains('HeilM-RL')</text>
                </inputEntry>
                <inputEntry id="inputEntry42" expressionLanguage="groovy">
                    <text>['GOÄ', 'AMNOG', 'TAR_AB'].containsAll(requiredSkills)</text>
                </inputEntry>
                <inputEntry id="inputEntry43" expressionLanguage="groovy">
                    <text>['GOÄ', 'AMNOG'].containsAll(requiredSkills)</text>
                </inputEntry>
                <inputEntry id="inputEntry44" expressionLanguage="groovy">
                    <text>['GOZ', 'TAR_EZ'].containsAll(requiredSkills)</text>
                </inputEntry>
                <inputEntry id="inputEntry47" expressionLanguage="groovy">
                    <text>['HeilM-RL'].containsAll(requiredSkills)</text>
                </inputEntry>
                <inputEntry id="inputEntry45" expressionLanguage="groovy">
                    <text>['SH', 'TAR_ES'].containsAll(requiredSkills)</text>
                </inputEntry>
                <inputEntry id="inputEntry46" expressionLanguage="groovy">
                    <text>['TAR_AB', 'TAR_EZ'].containsAll(requiredSkills)</text>
                </inputEntry>
            </clause>

            <clause id="inputRequiredAuthorizations" name="Required Authorizations">
                <inputExpression id="requiredAuthorizationsExpression" name="Required Authorizations" expressionLanguage="groovy">
                    <text>requiredAuthorizations</text>
                </inputExpression>
                
                <inputEntry id="inputEntry51" expressionLanguage="groovy">
                    <text>requiredAuthorizations.contains('INTERNA')</text>
                </inputEntry>
                <inputEntry id="inputEntry52" expressionLanguage="groovy">
                    <text>['KULANZ', 'EXKASSO_L'].containsAll(requiredAuthorizations)</text>
                </inputEntry>
                <inputEntry id="inputEntry53" expressionLanguage="groovy">
                    <text>requiredAuthorizations.isEmpty()</text>
                </inputEntry>
                <inputEntry id="inputEntry54" expressionLanguage="groovy">
                    <text>['EXKASSO_S', 'EXKASSO_M'].containsAll(requiredAuthorizations)</text>
                </inputEntry>
                <inputEntry id="inputEntry55" expressionLanguage="groovy">
                    <text>['EXKASSO_S'].containsAll(requiredAuthorizations)</text>
                </inputEntry>
                <inputEntry id="inputEntry56" expressionLanguage="groovy">
                    <text>['KULANZ'].containsAll(requiredAuthorizations)</text>
                </inputEntry>
                <inputEntry id="inputEntry57" expressionLanguage="groovy">
                    <text>['EXKASSO_M'].containsAll(requiredAuthorizations)</text>
                </inputEntry>
            </clause>

            <clause id="candidateUsers" name="candidateUsers" camunda:output="candidateUsers">
                <outputEntry expressionLanguage="groovy" id="outputEntry90">
                    <text>'Ines'</text>
                </outputEntry>
                <outputEntry expressionLanguage="groovy" id="outputEntry91">
                    <text>'Herbert'</text>
                </outputEntry>
                <outputEntry expressionLanguage="groovy" id="outputEntry92">
                    <text>'Andreas'</text>
                </outputEntry>
                <outputEntry expressionLanguage="groovy" id="outputEntry93">
                    <text>'Emma'</text>
                </outputEntry>
                <outputEntry expressionLanguage="groovy" id="outputEntry94">
                    <text>'Sonja'</text>
                </outputEntry>
                <outputEntry expressionLanguage="groovy" id="outputEntry95">
                    <text>'Xaver'</text>
                </outputEntry>
                <outputEntry expressionLanguage="groovy" id="outputEntry96">
                    <text>'Hanna'</text>
                </outputEntry>
                <outputEntry expressionLanguage="groovy" id="outputEntry97">
                    <text>'Bernd'</text>
                </outputEntry>
                <outputEntry expressionLanguage="groovy" id="outputEntry98">
                    <text>'Tom'</text>
                </outputEntry>
            </clause>


            <rule id="rule81">
                <condition>inputEntry51</condition>
                <conclusion>outputEntry90</conclusion>
            </rule>         
            <rule id="rule82">
                <condition>inputEntry41</condition>
                <condition>inputEntry51</condition>
                <conclusion>outputEntry91</conclusion>
            </rule>         
            <rule id="rule83">
                <condition>inputEntry52</condition>
                <conclusion>outputEntry91</conclusion>
            </rule>         
            <rule id="rule84">
                <condition>inputEntry42</condition>
                <condition>inputEntry53</condition>
                <conclusion>outputEntry92</conclusion>
            </rule>         
            <rule id="rule85">
                <condition>inputEntry43</condition>
                <condition>inputEntry54</condition>
                <conclusion>outputEntry93</conclusion>
            </rule>         
            <rule id="rule86">
                <condition>inputEntry55</condition>                
                <conclusion>outputEntry94</conclusion>
            </rule>         
            <rule id="rule87">
                <condition>inputEntry44</condition>
                <condition>inputEntry53</condition>
                <conclusion>outputEntry95</conclusion>
            </rule>         
            <rule id="rule88">
                <condition>inputEntry47</condition>
                <condition>inputEntry53</condition>
                <conclusion>outputEntry96</conclusion>
            </rule>         
            <rule id="rule89">
                <condition>inputEntry45</condition>
                <condition>inputEntry56</condition>
                <conclusion>outputEntry97</conclusion>
            </rule>         
            <rule id="rule90">
                <condition>inputEntry46</condition>
                <condition>inputEntry57</condition>
                <conclusion>outputEntry98</conclusion>
            </rule>         


        </DecisionTable>
    </Decision>    


</Definitions>
